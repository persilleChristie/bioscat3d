#ifndef FIELDCALCULATORUPW_H
#define FIELDCALCULATORUPW_H

#include "FieldCalculator.h"
#include "../Utils/Constants.h"
#include <Eigen/Dense>
#include <complex>

/// @brief FieldCalculator for computing fields generated by a uniform plane wave (UPW).
/// @details This class extends the FieldCalculator class to implement the computation of
/// electric and magnetic fields generated by a uniform plane wave at specified evaluation points.
class FieldCalculatorUPW : public FieldCalculator {
private:
    Eigen::Vector3d k_;
    double E0_;
    double polarization_;

public:
    /// @brief Constructor for FieldCalculatorUPW.
    /// @param k_in The wave vector of the plane wave as an Eigen::Vector3d.
    /// @param E0_in The amplitude of the electric field.
    /// @param polarization_in The polarization angle of the plane wave (in radians).
    /// @details This constructor initializes the plane wave with the given wave vector, amplitude, and polarization angle.
    FieldCalculatorUPW(const Eigen::Vector3d& k_in, const double E0_in, const double polarization_in);

    /// @brief Computes the electric and magnetic fields at specified evaluation points.
    /// @details This method implements the computation of the electric and magnetic fields
    /// generated by the uniform plane wave at the given evaluation points. The fields are returned in the output matrices `outE` and `outH`.
    /// @param outE Output matrix for electric field components (Nx3 complex numbers).
    /// @param outH Output matrix for magnetic field components (Nx3 complex numbers).
    /// @param evalPoints Matrix of evaluation points (Nx3 real numbers).    
    void computeReflectedFields(
        Eigen::MatrixX3cd& refE,
        Eigen::MatrixX3cd& refH,
        const Eigen::MatrixX3d& evalPoints
    ) const;
    
    /// @brief Computes the electric and magnetic fields at specified evaluation points.
    /// @details This method implements the computation of the electric and magnetic fields
    /// generated by the uniform plane wave at the given evaluation points. The fields are returned in the output matrices `outE` and `outH`.
    /// @param outE Output matrix for electric field components (Nx3 complex numbers).
    /// @param outH Output matrix for magnetic field components (Nx3 complex numbers).
    /// @param evalPoints Matrix of evaluation points (Nx3 real numbers).
    /// @param polarization_idx Index of the polarization to use (default is 0, used in total fields).
    virtual void computeFields(
        Eigen::MatrixX3cd& outE,
        Eigen::MatrixX3cd& outH,
        const Eigen::MatrixX3d& evalPoints,
        int polarization_idx = 0 // Only used in total fields
    ) const override;

};

#endif // FIELDCALCULATORUPW_H
